/*
 * Copyright 2019 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'java'

group = 'net.getsentry.gocd'

// these values that go into plugin.xml
project.ext.pluginDesc = [
        id         : 'net.getsentry.gocd.google-iap-authorization',
        version    : project.version,
        goCdVersion: '20.9.0',
        name       : 'Google IAP authorization',
        description: 'Allow users to sign in using Google IAP',
        vendorName : 'sentry.io',
        vendorUrl  : 'https://github.com/getsentry/gocd-google-iap-authorization-plugin'
]

repositories {
    mavenCentral()
    mavenLocal()
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

dependencies {
    compileOnly group: 'cd.go.plugin', name: 'go-plugin-api', version: project.pluginDesc.goCdVersion
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.9.3'

    testImplementation group: 'cd.go.plugin', name: 'go-plugin-api', version: project.pluginDesc.goCdVersion
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '5.1.1'
    testImplementation group: 'org.hamcrest', name: 'hamcrest-library', version: '2.2'
    testImplementation group: 'org.skyscreamer', name: 'jsonassert', version: '1.5.1'
    testImplementation group: 'com.squareup.okhttp3', name: 'mockwebserver', version: '4.10.0'

    testImplementation platform('org.junit:junit-bom:5.9.2')
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine'
}

configurations.all {
    resolutionStrategy.dependencySubstitution {
        substitute module("junit:junit") using module("io.quarkus:quarkus-junit4-mock:2.16.1.Final") because "We don't want JUnit 4; but is an unneeded transitive of mockwebserver."
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}

processResources {
    from("src/main/resource-templates") {
        filesMatching('plugin.xml') {
            expand project.pluginDesc
        }
    }
}

jar {
    from(configurations.runtimeClasspath) {
        into "lib/"
    }
}
